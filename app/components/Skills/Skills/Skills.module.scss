@use "../../../styles/utils/variables.scss" as var;

.container {
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: var(--skills--container--bg);
  padding: 15em 20rem 2rem 20rem;
  margin-top: -1rem;

  @media screen and (max-width: 1400px) {
    padding: 10rem 10rem 2rem 10rem;
  }

  @media screen and (max-width: var.$breakpoint-tablette) {
    flex-direction: column;
    padding: 15rem 5rem 3rem 5rem;
    scroll-margin: 18rem;
  }

  @media screen and (max-width: var.$breakpoint-mobile) {
    padding: 15rem 0rem 3rem 0rem;
  }

  .title {
    font-size: var(--skills--title--fontSize--desktop);
    font-family: var(--fontFamily--oswald);
    font-weight: var(--skills--title--fontWeight);
    color: var(--skills--title--color);

    @media screen and (max-width: var.$breakpoint-tablette) {
      font-size: var(--skills--title--fontSize--tablet);
    }

    @media screen and (max-width: var.$breakpoint-mobile) {
      font-size: var(--skills--title--fontSize--mobile);
      text-align: center;
    }
  }

  &__Accordeons {
    display: flex;
    justify-content: center;
    min-height: 50rem;
    height: auto;
    gap: 2rem;
    margin-top: 3rem;

    @media screen and (max-width: 1400px) {
      min-height: 45rem;
    }

    @media screen and (max-width: var.$breakpoint-tablette) {
      justify-content: center;
      min-height: 35rem;
    }

    @media screen and (max-width: var.$breakpoint-mobile) {
      flex-direction: column;
      justify-content: start;
      align-items: center;
      min-height: 70rem;
      height: auto;
      margin-top: 4rem;
    }

    .dataAccordeon {
      display: flex;
      flex-direction: column;
      height: auto;
      gap: 2rem;
    }
  }
}

.shape {
  position: absolute;
  top: 0rem;
  left: 0;
  width: 100%;
  overflow: hidden;
  line-height: 0;
  transform: rotate(180deg);
}

.shape svg {
  position: relative;
  display: block;
  width: calc(110% + 1.3px);
  height: 120px;
  transform: rotateY(180deg);
  filter: drop-shadow(
    0rem 0.1rem 0.2rem rgba(var(--skills--shapeFilterDropShadow))
  );
  // blanc rgba(0, 0, 0, 0.3)
  // noir rgba(255, 255, 255, 0.3)
}

.shape .shape-fill {
  fill: var(--skills--waveFill);
}
